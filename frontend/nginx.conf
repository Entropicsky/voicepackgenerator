# Target File: frontend/nginx.conf
# Instructions: Create Nginx configuration for serving React static files and proxying API requests.

server {
    listen ${PORT}; # Use the PORT environment variable provided by Heroku
    server_name localhost;

    # Set Docker's internal DNS resolver (valid for 10s)
    # REMOVED - Not reliable for inter-dyno communication; proxy back to Heroku router instead.
    # resolver 127.0.0.11 valid=10s;

    # Root directory for static files
    root /usr/share/nginx/html;
    index index.html index.htm;

    # Serve static files directly
    location / {
        # Try to serve file directly, fallback to index.html for SPA routing
        try_files $uri $uri/ /index.html;
        # Add cache-busting headers
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Use variable to force runtime DNS resolution
    # REMOVED - Proxying back to the main app URL now.
    # set $backend_service http://api:5000;

    # Proxy API requests back to the main app URL, letting Heroku route to the 'api' dyno
    location /api {
        # Use the original host header and scheme to reconstruct the app URL
        proxy_pass $scheme://$http_host;
        proxy_set_header Host $http_host; # Pass the original host
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Optional: Add a read timeout
        # proxy_read_timeout 300s;
    }

    # Proxy audio requests back to the main app URL, letting Heroku route to the 'api' dyno
    location /audio {
        proxy_pass $scheme://$http_host;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_read_timeout 300s;
    }

    # Optional: Add error pages if needed
    # error_page 500 502 503 504 /50x.html;
    # location = /50x.html {
    #     root /usr/share/nginx/html;
    # }
} 