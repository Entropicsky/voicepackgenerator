# Target File: frontend/nginx.conf
# Instructions: Create Nginx configuration for serving React static files and proxying API requests.

# Main Nginx config file template for Heroku

# Basic event handling
events {
  worker_connections 1024; # Default, adjust if needed
}

# HTTP context
http {
  include       /etc/nginx/mime.types; # Include standard MIME types
  default_type  application/octet-stream;

  # Define the server block using substituted PORT
  server {
    # Listen on the port assigned by Heroku
    listen $PORT;
    server_name _;

    # Serve React static files
    # Point to where the files are copied in the final Docker stage
    root /usr/share/nginx/html;
    index index.html;

    location / {
      # Try the actual file, then the directory, then fall back to index.html
      # =404 prevents redirect loops if index.html itself is somehow inaccessible
      try_files $uri $uri/ /index.html =404;
    }

    # Proxy API requests to backend service (Gunicorn)
    location /api/ {
      # Add Docker's embedded DNS server
      resolver 127.0.0.11 valid=10s;
      # Set the variable for proxy_pass (needed when using resolver with variables)
      set $backend_upstream $PROXY_UPSTREAM;
      proxy_pass $backend_upstream;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy audio requests to backend service (Gunicorn)
    location /audio/ {
       resolver 127.0.0.11 valid=10s;
       set $backend_upstream $PROXY_UPSTREAM;
       proxy_pass $backend_upstream;
       # Add necessary proxy headers for audio if needed, maybe just Host?
       proxy_set_header Host $host; 
    }
  }
} 